{"ast":null,"code":"var _jsxFileName = \"/Users/Kev/Desktop/react/todo/todo/src/Components/NewTodoForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NewTodoForm({\n  onSubmit,\n  dueDate\n}) {\n  _s();\n  const [newItem, setNewItem] = useState(\"\");\n  const [newDate, setNewDate] = useState(\"\");\n  function HandleSubmit(e) {\n    e.preventDefault();\n    if (newItem === \"\") return;\n    onSubmit(newItem);\n    setNewItem(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: HandleSubmit,\n    className: \"new-item-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newItem,\n        onChange: e => setNewItem(e.target.value),\n        type: \"text\",\n        id: \"item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      children: \"Add To-do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(NewTodoForm, \"achULrTwPLhSq4d1+GdL4cLqwD0=\");\n_c = NewTodoForm;\nvar _c;\n$RefreshReg$(_c, \"NewTodoForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","NewTodoForm","onSubmit","dueDate","_s","newItem","setNewItem","newDate","setNewDate","HandleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","type","id","_c","$RefreshReg$"],"sources":["/Users/Kev/Desktop/react/todo/todo/src/Components/NewTodoForm.js"],"sourcesContent":["import { useState } from \"react\"\n\n\n\nexport function NewTodoForm({ onSubmit, dueDate }){\n\n    const [newItem, setNewItem] = useState(\"\")\n    const [newDate, setNewDate] = useState(\"\")\n\n    function HandleSubmit(e, ) {\n        e.preventDefault()\n        \n        if(newItem === \"\") return\n\n        onSubmit(newItem)\n        setNewItem(\"\")\n      }\n\n    return (\n        <form onSubmit={HandleSubmit} className='new-item-form'>\n        <div className='form-row'>\n          <label>New Item</label>\n          <input value={newItem} onChange={e => setNewItem(e.target.value)} type='text' id='item' />\n          \n        </div>\n        <button className='add-btn'>Add To-do</button>\n      </form>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIhC,OAAO,SAASC,WAAWA,CAAC;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,EAAC;EAAAC,EAAA;EAE9C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,SAASW,YAAYA,CAACC,CAAC,EAAI;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAGN,OAAO,KAAK,EAAE,EAAE;IAEnBH,QAAQ,CAACG,OAAO,CAAC;IACjBC,UAAU,CAAC,EAAE,CAAC;EAChB;EAEF,oBACIN,OAAA;IAAME,QAAQ,EAAEO,YAAa;IAACG,SAAS,EAAC,eAAe;IAAAC,QAAA,gBACvDb,OAAA;MAAKY,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBb,OAAA;QAAAa,QAAA,EAAO;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvBjB,OAAA;QAAOkB,KAAK,EAAEb,OAAQ;QAACc,QAAQ,EAAET,CAAC,IAAIJ,UAAU,CAACI,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;QAACG,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC;MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvF,CAAC,eACNjB,OAAA;MAAQY,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEb;AAACb,EAAA,CAxBeH,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}